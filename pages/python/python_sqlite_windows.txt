====== Python Sqlite unter Windows ======

Da Commandline unter Windows per Default nicht mit utf8 gestartet wird, muss man die Codepage ändern bevor man das Python Skript ausführt:

===== Beispiel Batch-Script: =====

<code batch>
chcp 65001

C:\Python27\python.exe "%HOMEPATH%\projects\python_sqlite_unicode\test.py"

pause
</code>
====== Beispiel test.py: ======

<code python>
#!/usr/bin/python
# -*- coding: utf-8 -*-

import sqlite3, os

WORKING_DIR    = os.path.dirname(os.path.realpath(__file__))
DATABASE_DIR   = os.path.join(WORKING_DIR, 'text.db')

class DB():
    def now(self):
        return int((datetime.datetime.today()).strftime('%y%m%d%H%M'))

    def initDB(self):
        dbcon = sqlite3.connect(DATABASE_DIR)
        with dbcon:
            cursor = dbcon.cursor()
            cursor.execute (
                """ CREATE TABLE IF NOT EXISTS TEXTS (
                         TXT VARCHAR(50) )""")

    def insertText(self,i_text):
        dbcon = sqlite3.connect(DATABASE_DIR)
        dbcon.text_factory  = i_text # <- use text_factory
        with dbcon:
            cursor = dbcon.cursor()
            cursor.execute("INSERT INTO TEXTS (TXT) VALUES (?)", (i_text, ))

db=DB()
db.initDB()
db.insertText('asdf')

s="ą---ź---ć---ó---ęĘ"
print (s)

db.insertText(s)
</code>

